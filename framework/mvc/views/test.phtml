<?
    if (!empty($_POST))
    {
        $post_data = $_POST;

        $_POST = null;
    }

    UTIL::Load_Extension('splash', 'php');
    UTIL::Load_Extension('vulcan', 'js');
    UTIL::Load_Extension('pythia', 'js');
    UTIL::Load_Extension('jap', 'js');
    UTIL::Load_Extension('stopwatch', 'js');
    UTIL::Load_Extension('centurion', 'js');
    UTIL::Load_Extension('parallel', 'js');
    UTIL::Load_Extension('aether', 'js');
    UTIL::Load_Extension('content_fetcher', 'js');
    UTIL::Load_Extension('ultron', 'js');
?>
            <div id="test" class="page">
                <div class="content">
                    <?
                        UTIL::Load_Content('test', 'dynamic');

                        echo '<br><br>';
                        echo MVC::Restore_Content('test');
                    ?>
                    <div class="controls">
                        <div id="test_data">
                            <br>
                            <div id="test_elements">
                                <?
                                    $splash = new SPLASH();

                                    $test_text = UTIL::Load_Content('test_button_text', 'static');

                                    echo '<div class="control_item">';
                                    echo $splash->Button('create', array('value'    =>  $test_text . ' (AJAX request)',
                                                                         'type'     =>  'button',
                                                                         'class'    =>  'button'),
                                                                   array('onclick'  => 'ajax_fetch_content(\'motto\')'));
                                    echo '</div>';
                                    //print_r($splash->Button('debug', array('value', 'id'), array('onajaxserverclick')));

                                    echo '<div class="control_item">';
                                    echo $splash->Button('create', array('value'    =>  $test_text . ' (AJAX response)',
                                                                         'type'     =>  'button',
                                                                         'class'    =>  'button'),
                                                                   array('onajaxserverclick'   => 
                                                                   array('Server_Mouse_Click(Hello micro-MVC! (AJAX))', 
                                                                         'test_results')));
                                    echo '</div>';
                                    //print_r($splash->Button('debug', array('value', 'id'), array('onajaxserverclick')));
                                    
                                    echo '<div class="control_item">';
                                    echo $splash->Button('create', array('value'    =>  $test_text . ' (Form post)',
                                                                         'type'     =>  'button',
                                                                         'class'    =>  'button'),
                                                                   array('onserverclick'        => 
                                                                   array('Server_Mouse_Click(Hello micro-MVC! (POST))', 
                                                                         '../test/')));
                                    echo '</div>';
                                    //print_r($splash->Button('debug', array('value', 'id'), array('onserverclick')));
                                    
                                    echo '<br>
                                          <div class="control_item">
                                          <input id="file_input" name="file" type="file" class="button" required>
                                          </div>';
                                    echo '<div class="control_item">';
                                    echo $splash->Button('create', array('value'    =>  $test_text . ' (AJAX file post)',
                                                                         'type'     =>  'button',
                                                                         'class'    =>  'button'),
                                                                   array('onclick'  =>  'send_data_to_server()'));
                                    echo '</div>';
                                    //print_r($splash->Button('debug', array('value', 'id'), array('onclick')));
                                ?>
                            </div>
                            <br>
                            <div id="test_results" class="note">
                            <?
                                if (isset($post_data))
                                {
                                    $searches = array('{message}');
                                    $replaces = array(print_r($post_data, true));
                                    $arguments = array($searches, $replaces);
                                    $info_template = UTIL::Fetch_Template('info', $arguments);

                                    echo $info_template;
                                }
                            ?>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

<script>
    function ajax_fetch_content(content_id)
    {
        content_fetcher(content_id, '<?=LANG::Get('this');?>', function(response) { alert(response); });
    }

    function send_data_to_server()
    {
        var dom = new vulcan();
        var ajax = new bull();
        var file_input_element = dom.objects.by_id('file_input');
        var form_data = new FormData();

        form_data.append('test_file', file_input_element.files[0]);

        ajax.data('/framework/mvc/views/assets/misc/test.php', form_data, 'test_results', false);
    }

    ultron(function(event)
           {
                var dom = new vulcan();
                var ajax = new bull();
                var timer = new stopwatch();
                var my_aether = new aether();
                var aether_config = {
                                        settings    :   {
                                                            chain_mode          :   'serial',           // CHOICES: ['serial', 'parallel', 'delay', 'callback' (ON SUCCESS)]
                                                            init_delay          :   5000,               // OPTIONAL (Delay initialization of scheduler by so many milliseconds)
                                                            interval            :   30000,              // OPTIONAL (Repeat scheduled tasks every so many milliseconds)
                                                            final_callback      :   function() {  }     // OPTIONAL (Function to execute when scheduler finishes up)
                                                        },
                                        tasks       :   [
                                                            {
                                                                type                :   'data',
                                                                element_id          :   'test_id',
                                                                content_mode        :   'replace',
                                                                url                 :   '/test',
                                                                data                :   '',
                                                                response_timeout    :   2500,
                                                                callbacks           :   {
                                                                                            success     :   function() {  },
                                                                                            fail        :   function() {  },        // OPTIONAL
                                                                                            timeout     :   function() {  }         // OPTIONAL
                                                                                        },
                                                                priority            :   3,              // OPTIONAL (Relative priority to other tasks)
                                                                latency             :   [100],          // OPTIONAL (Guarantee latency)
                                                                bandwidth           :   [20, 28],       // OPTIONAL (Guarantee bandwidth)
                                                                repeat              :   3,              // OPTIONAL (Repeat task so many times - DEFAULT: 0 / FOREVER: -1)
                                                                delay               :   2000,           // OPTIONAL (Delayed start in milliseconds)
                                                            },
                                                            {
                                                                priority            :   1,
                                                                latency             :   [50, 350],
                                                                bandwidth           :   [34],
                                                                repeat              :   0,
                                                                delay               :   1340,
                                                                type                :   'data',
                                                                element_id          :   'test_id',
                                                                content_mode        :   'append',
                                                                url                 :   '/test',
                                                                data                :   '',
                                                                response_timeout    :   2500,
                                                                callbacks           :   {
                                                                                            success     :   function() {  },
                                                                                            //fail        :   function() {  },
                                                                                            timeout     :   function() {  }
                                                                                        }
                                                            },
                                                            {
                                                                priority            :   4,
                                                                latency             :   [14],
                                                                bandwidth           :   [200],
                                                                //delay               :   400,
                                                                type                :   'request',
                                                                ajax_mode           :   'synchronous',
                                                                url                 :   '/test',
                                                                data                :   '',
                                                                response_timeout    :   3000,
                                                                callbacks           :   {
                                                                                            success     :   function() {  },
                                                                                            fail        :   function() {  },
                                                                                            timeout     :   function() {  }
                                                                                        }
                                                            },
                                                            {
                                                                priority            :   2,
                                                                latency             :   [1000],
                                                                bandwidth           :   [100, 420],
                                                                repeat              :   -1,
                                                                type                :   'request',
                                                                ajax_mode           :   'asynchronous',
                                                                url                 :   '/test',
                                                                data                :   '',
                                                                response_timeout    :   1000,
                                                                callbacks           :   {
                                                                                            success     :   function() {  },
                                                                                            //fail        :   function() {  }
                                                                                            //timeout     :   function() {  }
                                                                                        }
                                                            }
                                                        ]
                                    };

                console.log(my_aether.schedule(aether_config)); // Schedule and run AJAX tasks
                console.log(my_aether.status()); // All AJAX tasks
                //console.log(my_aether.status(task_list[3])); // Only a specified AJAX task
                //console.log(my_aether.cancel()); // All tasks
                //console.log(my_aether.cancel(task_list[1])); // Only a specified AJAX task
                //timer.start(1000, function() { console.log('HELLO!'); });
                <?
                    if (!isset($post_data))
                    {
                ?>
                        ajax.data('/framework/mvc/views/assets/misc/test.php', 'id=1', 'test_results', false);
                <?
                    }

                    unset($post_data);
                ?>
           });
</script>
